plugins {
    id "com.github.johnrengelman.shadow" version "7.1.2"
    id "com.matthewprenger.cursegradle" version "1.4.0"
    id "com.modrinth.minotaur" version "2.+"
}

architectury {
    platformSetupLoomIde()
    forge()
}

configurations {
    common
    shadowCommon // Don't use shadow from the shadow plugin because we don't want IDEA to index this.
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentForge.extendsFrom common
}

dependencies {
    forge libs.forge

    modApi libs.architectury.forge
    modApi libs.cloth.config.forge
    modApi libs.pehkui.forge

    common(project(path: ":common", configuration: "namedElements")) { transitive false }
    shadowCommon(project(path: ":common", configuration: "transformProductionForge")) { transitive = false }
}

processResources {
    inputs.property "version", project.version

    filesMatching("META-INF/mods.toml") {
        expand "version": project.version
    }
}

shadowJar {
    exclude "fabric.mod.json"
    exclude "architectury.common.json"

    configurations = [project.configurations.shadowCommon]
    classifier "dev-shadow"
}

remapJar {
    input.set shadowJar.archiveFile
    dependsOn shadowJar
    classifier null
}

jar {
    archivesBaseName = project.archivesBaseName + "-forge"
    classifier "dev"
}

sourcesJar {
    def commonSources = project(":common").sourcesJar
    dependsOn commonSources
    from commonSources.archiveFile.map { zipTree(it) }
}

components.java {
    withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
        skip()
    }
}

curseforge {
    if (System.getenv("CURSEFORGE_API_KEY") != null) {
        println("Enabling Curseforge publishing for Forge")
        apiKey = System.getenv("CURSEFORGE_API_KEY")

        project {
            id = "485532"
            changelogType = "markdown"
            releaseType = "release"
            changelog = rootProject.file("CHANGELOG.md")

            mainArtifact(remapJar.archiveFile) {
                displayName = rootProject.property("release_name").replace("\$LOADER", "Forge")
            }

            afterEvaluate {
                uploadTask.dependsOn("build")
            }

            addGameVersion "Forge"
            addGameVersion libs.versions.minecraft.get()

            relations {
                requiredDependency "architectury-api"
                requiredDependency "cloth-config"
                requiredDependency "pehkui"
            }
        }

        options {
            forgeGradleIntegration = false
        }
    }
}

modrinth {
    if (System.getenv("MODRINTH_API_KEY") != null) {
        println("Enabling Modrinth publishing for Forge")

        projectId = System.getenv("MODRINTH_API_KEY")
        projectId = "reaping"
        versionNumber = rootProject.property("release_name").replace("\$LOADER", "Forge")
        changelog = rootProject.file("CHANGELOG.md").text
        uploadFile = remapJar
        loaders = ["forge"]
        gameVersions = [libs.versions.minecraft.get()]

        dependencies {
            required.project "architectury-api"
            required.project "cloth-config"
            required.project "pehkui"
        }
    }
}
